services:
  tile38:
    image: tile38/tile38
    container_name: tile38
    ports:
        - 9851:9851
    restart: unless-stopped

  app:
    build:
#      context: ..
      dockerfile: Dockerfile.prebuilt
    container_name: app
    depends_on:
      - tile38
    environment:
      TILE38_HOST: tile38
      TILE38_PORT: 9851
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AIRPLANESLIVEKEY: ${AIRPLANESLIVEKEY}
    ports:
      - "8080:8080/tcp"
      - "16256:16256/udp"
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:8.2-alpine
    restart: always
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: >
      sh -c "exec redis-server
      --save 20 1
      --loglevel warning
      --requirepass $$REDIS_PASSWORD"
    volumes:
      - cache:/data

#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    restart: unless-stopped
#    ports:
#      - '3000:3000'
#    volumes:
#      - grafana:/var/lib/grafana

# grafana-cli plugins install orchestracities-map-panel
#  api:
#    container_name: quotes-api
##    build:
##      context: ./
##      target: production
##    image: quotes-api
#    depends_on:
#      - tile38
#      - cache
#    ports:
#      - 3000:3000
#    environment:
#      NODE_ENV: production
#      DB_HOST: db
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#      DB_NAME: postgres
#      REDIS_HOST: cache
#      REDIS_PORT: 6379
#      REDIS_PASSWORD: QXgxqrsWYihha4pWeldhy2Auu
#    links:
#      - db
#      - cache
#    volumes:
#      - ./:/src


volumes:
  cache:
    driver: local
  grafana:
    driver: local
